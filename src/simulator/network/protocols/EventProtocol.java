/**
 * @author Stefano Ceccotti
*/

package simulator.network.protocols;

import simulator.events.Event;
import simulator.utils.Time;

/**
 * This interface can be used to let protocols generate events themselves.
*/
public interface EventProtocol
{
    /**
     * Process an incoming timeout event, generated by this protocol.
     * 
     * @param event    the received event.
     * 
     * @return the response message, {@code null} otherwise.
    */
    public Header processEvent( final TimeoutEvent event );
    
    /**
     * The TimeoutEvent class, used to generate events whose destination is the node generating this event.</br>
     * An instance of this class must contains the informations needed to retrieve the protocol which generates the event,
     * in order to be processed by itself.
    */
    public static class TimeoutEvent extends Event
    {
        private final int layer;
        private final int identifier;
        //private ... packet;
        
        public TimeoutEvent( final Time time, final int layer, final int identifier )
        {
            super( time );
            this.layer = layer;
            this.identifier = identifier;
        }
        
        public int getLayer() {
            return layer;
        }
        
        public int getIdentifier() {
            return identifier;
        }
        
        //public ... getPacket() {
        //  return packet;
        //}
    }
}