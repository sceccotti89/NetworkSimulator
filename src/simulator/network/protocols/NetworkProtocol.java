/**
 * @author Stefano Ceccotti
*/

package simulator.network.protocols;

import java.util.concurrent.TimeUnit;

import simulator.core.Agent;
import simulator.events.Event;
import simulator.events.Packet;
import simulator.events.impl.ProtocolEvent;
import simulator.topology.NetworkNode;
import simulator.topology.NetworkTopology;
import simulator.utils.Time;

public abstract class NetworkProtocol
{
    protected final NetworkTopology net;
    protected final Agent agent;
    protected Time time;
    
    
    
    public NetworkProtocol( final NetworkTopology net, final Agent agent )
    {
        this.time = new Time( 0, TimeUnit.MICROSECONDS );
        this.net = net;
        this.agent = agent;
    }
    
    /**
     * Returns the next node starting from the current one.
     * 
     * @param destID    destination node identifier.
     * 
     * @return the next node in the graph.
    */
    public abstract NetworkNode getNextNode( final long destID );
    
    /**
     * Returns an object representing an event sent by this protocol,</br>
     * for instance a packet containing the distance to the own neighbours.</br>
     * NOTE: it can be {@code null}.
    */
    public abstract ProtocolEvent getEvent();
    
    /**
     * Returns the packet generated by this protocol.
    */
    public abstract Packet makePacket();
    
    /**
     * Process an incoming packet.
     * 
     * @param packet    the incoming packet.
     * 
     * @return The event generated by processing the incoming packet.
    */
    public abstract Event processPacket( final Packet packet );
    
    /**
     * Returns the ID of this protocol.
    */
    public abstract String getID();
}